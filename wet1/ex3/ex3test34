.global _start

  .section .text

  mov $mergedArray, %rax
  cmpl $100, 0(%rax)
  jne bad_exit
  cmpl $99, 4(%rax)
  jne bad_exit
  cmpl $94, 8(%rax)
  jne bad_exit
  cmpl $90, 12(%rax)
  jne bad_exit
  cmpl $89, 16(%rax)
  jne bad_exit
  cmpl $87, 20(%rax)
  jne bad_exit
  cmpl $82, 24(%rax)
  jne bad_exit
  cmpl $80, 28(%rax)
  jne bad_exit
  cmpl $75, 32(%rax)
  jne bad_exit
  cmpl $70, 36(%rax)
  jne bad_exit
  cmpl $64, 40(%rax)
  jne bad_exit
  cmpl $63, 44(%rax)
  jne bad_exit
  cmpl $60, 48(%rax)
  jne bad_exit
  cmpl $56, 52(%rax)
  jne bad_exit
  cmpl $55, 56(%rax)
  jne bad_exit
  cmpl $49, 60(%rax)
  jne bad_exit
  cmpl $44, 64(%rax)
  jne bad_exit
  cmpl $37, 68(%rax)
  jne bad_exit
  cmpl $33, 72(%rax)
  jne bad_exit
  cmpl $31, 76(%rax)
  jne bad_exit
  cmpl $30, 80(%rax)
  jne bad_exit
  cmpl $23, 84(%rax)
  jne bad_exit
  cmpl $21, 88(%rax)
  jne bad_exit
  cmpl $20, 92(%rax)
  jne bad_exit
  cmpl $19, 96(%rax)
  jne bad_exit
  cmpl $16, 100(%rax)
  jne bad_exit
  cmpl $14, 104(%rax)
  jne bad_exit
  cmpl $5, 108(%rax)
  jne bad_exit
  cmpl $2, 112(%rax)
  jne bad_exit
  cmpl $0, 116(%rax)
  jne bad_exit

  movq $60, %rax
  movq $0, %rdi
  syscall

bad_exit:
  movq $60, %rax
  movq $1, %rdi
  syscall

.section .data
  array1: .int 99,87,60,56,31,23,19,2,0
  array2: .int 100,100,94,90,89,82,80,75,70,64,63,63,60,56,55,49,44,37,33,31,30,21,20,19,16,14,5,0
  mergedArray: .zero 30

