.global _start

  .section .text

  movq $node_0, %rax
  cmpq $97, (%rax)
  jne bad_exit
  cmpq $node_4, 8(%rax)
  jne bad_exit
  cmpq $node_1, 16(%rax)
  jne bad_exit

  movq $node_4, %rax
  cmpq $44, (%rax)
  jne bad_exit
  cmpq $0, 8(%rax)
  jne bad_exit
  cmpq $0, 16(%rax)
  jne bad_exit

  movq $node_1, %rax
  cmpq $461, (%rax)
  jne bad_exit
  cmpq $node_2, 8(%rax)
  jne bad_exit
  cmpq $node_3, 16(%rax)
  jne bad_exit

  movq $node_2, %rax
  cmpq $238, (%rax)
  jne bad_exit
  cmpq $0, 8(%rax)
  jne bad_exit
  cmpq $0, 16(%rax)
  jne bad_exit

  movq $node_3, %rax
  cmpq $661, (%rax)
  jne bad_exit
  cmpq $0, 8(%rax)
  jne bad_exit
  cmpq $node_5, 16(%rax)
  jne bad_exit

  movq $node_5, %rax
  cmpq $828, (%rax)
  jne bad_exit
  cmpq $new_node, 8(%rax)
  jne bad_exit
  cmpq $0, 16(%rax)
  jne bad_exit

  movq $new_node, %rax
  cmpq $671, (%rax)
  jne bad_exit
  cmpq $0, 8(%rax)
  jne bad_exit
  cmpq $0, 16(%rax)
  jne bad_exit


  movq $60, %rax
  movq $0, %rdi
  syscall

bad_exit:
  movq $60, %rax
  movq $1, %rdi
  syscall

.section .data
  root: .quad node_0
  node_0:
            .quad 97
            .quad node_4
            .quad node_1
  node_4:
            .quad 44
            .quad 0
            .quad 0
  node_1:
            .quad 461
            .quad node_2
            .quad node_3
  node_2:
            .quad 238
            .quad 0
            .quad 0
  node_3:
            .quad 661
            .quad 0
            .quad node_5
  node_5:
            .quad 828
            .quad 0
            .quad 0
  new_node: .quad 671, 0, 0


