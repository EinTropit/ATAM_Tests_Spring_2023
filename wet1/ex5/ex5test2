.global _start

  .section .text

  movq $node_0, %rax
  cmpq $635, (%rax)
  jne bad_exit
  cmpq $node_3, 8(%rax)
  jne bad_exit
  cmpq $node_1, 16(%rax)
  jne bad_exit

  movq $node_3, %rax
  cmpq $392, (%rax)
  jne bad_exit
  cmpq $0, 8(%rax)
  jne bad_exit
  cmpq $node_5, 16(%rax)
  jne bad_exit

  movq $node_5, %rax
  cmpq $625, (%rax)
  jne bad_exit
  cmpq $0, 8(%rax)
  jne bad_exit
  cmpq $node_6, 16(%rax)
  jne bad_exit

  movq $node_6, %rax
  cmpq $632, (%rax)
  jne bad_exit
  cmpq $0, 8(%rax)
  jne bad_exit
  cmpq $0, 16(%rax)
  jne bad_exit

  movq $node_1, %rax
  cmpq $997, (%rax)
  jne bad_exit
  cmpq $node_2, 8(%rax)
  jne bad_exit
  cmpq $0, 16(%rax)
  jne bad_exit

  movq $node_2, %rax
  cmpq $860, (%rax)
  jne bad_exit
  cmpq $node_4, 8(%rax)
  jne bad_exit
  cmpq $0, 16(%rax)
  jne bad_exit

  movq $node_4, %rax
  cmpq $783, (%rax)
  jne bad_exit
  cmpq $0, 8(%rax)
  jne bad_exit
  cmpq $0, 16(%rax)
  jne bad_exit


  movq $60, %rax
  movq $0, %rdi
  syscall

bad_exit:
  movq $60, %rax
  movq $1, %rdi
  syscall

.section .data
  root: .quad node_0
  node_0:
            .quad 635
            .quad node_3
            .quad node_1
  node_3:
            .quad 392
            .quad 0
            .quad node_5
  node_5:
            .quad 625
            .quad 0
            .quad node_6
  node_6:
            .quad 632
            .quad 0
            .quad 0
  node_1:
            .quad 997
            .quad node_2
            .quad 0
  node_2:
            .quad 860
            .quad node_4
            .quad 0
  node_4:
            .quad 783
            .quad 0
            .quad 0
  new_node: .quad 860, 0, 0


