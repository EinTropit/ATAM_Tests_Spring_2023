.global _start

  .section .text

  mov $mergedArray, %rax
  cmpl $97, 0(%rax)
  jne bad_exit
  cmpl $93, 4(%rax)
  jne bad_exit
  cmpl $90, 8(%rax)
  jne bad_exit
  cmpl $87, 12(%rax)
  jne bad_exit
  cmpl $82, 16(%rax)
  jne bad_exit
  cmpl $79, 20(%rax)
  jne bad_exit
  cmpl $73, 24(%rax)
  jne bad_exit
  cmpl $64, 28(%rax)
  jne bad_exit
  cmpl $62, 32(%rax)
  jne bad_exit
  cmpl $60, 36(%rax)
  jne bad_exit
  cmpl $59, 40(%rax)
  jne bad_exit
  cmpl $58, 44(%rax)
  jne bad_exit
  cmpl $55, 48(%rax)
  jne bad_exit
  cmpl $48, 52(%rax)
  jne bad_exit
  cmpl $47, 56(%rax)
  jne bad_exit
  cmpl $41, 60(%rax)
  jne bad_exit
  cmpl $40, 64(%rax)
  jne bad_exit
  cmpl $38, 68(%rax)
  jne bad_exit
  cmpl $30, 72(%rax)
  jne bad_exit
  cmpl $28, 76(%rax)
  jne bad_exit
  cmpl $20, 80(%rax)
  jne bad_exit
  cmpl $18, 84(%rax)
  jne bad_exit
  cmpl $16, 88(%rax)
  jne bad_exit
  cmpl $10, 92(%rax)
  jne bad_exit
  cmpl $8, 96(%rax)
  jne bad_exit
  cmpl $7, 100(%rax)
  jne bad_exit
  cmpl $6, 104(%rax)
  jne bad_exit
  cmpl $5, 108(%rax)
  jne bad_exit
  cmpl $4, 112(%rax)
  jne bad_exit
  cmpl $0, 116(%rax)
  jne bad_exit

  movq $60, %rax
  movq $0, %rdi
  syscall

bad_exit:
  movq $60, %rax
  movq $1, %rdi
  syscall

.section .data
  array1: .int 97,93,90,87,73,64,62,58,55,48,48,47,41,40,38,30,28,28,20,18,16,10,10,8,7,6,5,4,0
  array2: .int 82,79,60,59,0
  mergedArray: .zero 30

