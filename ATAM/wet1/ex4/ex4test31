.global _start

  .section .text

  movq $head, %rax
  cmpq $node_0, 0(%rax)
  jne bad_exit

  movq $node_0, %rax
  cmpl $57, (%rax)
  jne bad_exit
  cmpq $node_6, 4(%rax)
  jne bad_exit

  movq $node_6, %rax
  cmpl $759, (%rax)
  jne bad_exit
  cmpq $node_2, 4(%rax)
  jne bad_exit

  movq $node_2, %rax
  cmpl $936, (%rax)
  jne bad_exit
  cmpq $node_3, 4(%rax)
  jne bad_exit

  movq $node_3, %rax
  cmpl $853, (%rax)
  jne bad_exit
  cmpq $node_4, 4(%rax)
  jne bad_exit

  movq $node_4, %rax
  cmpl $154, (%rax)
  jne bad_exit
  cmpq $node_5, 4(%rax)
  jne bad_exit

  movq $node_5, %rax
  cmpl $886, (%rax)
  jne bad_exit
  cmpq $node_1, 4(%rax)
  jne bad_exit

  movq $node_1, %rax
  cmpl $203, (%rax)
  jne bad_exit
  cmpq $node_7, 4(%rax)
  jne bad_exit

  movq $node_7, %rax
  cmpl $722, (%rax)
  jne bad_exit
  cmpq $node_8, 4(%rax)
  jne bad_exit

  movq $node_8, %rax
  cmpl $34, (%rax)
  jne bad_exit
  cmpq $node_9, 4(%rax)
  jne bad_exit

  movq $node_9, %rax
  cmpl $714, (%rax)
  jne bad_exit
  cmpq $0, 4(%rax)
  jne bad_exit


  movq $60, %rax
  movq $0, %rdi
  syscall

bad_exit:
  movq $60, %rax
  movq $1, %rdi
  syscall

.section .data
  head:
            .quad node_0
  node_0:
            .int 57
            .quad node_1
  node_1:
            .int 203
            .quad node_2
  node_2:
            .int 936
            .quad node_3
  node_3:
            .int 853
            .quad node_4
  node_4:
            .int 154
            .quad node_5
  node_5:
            .int 886
            .quad node_6
  node_6:
            .int 759
            .quad node_7
  node_7:
            .int 722
            .quad node_8
  node_8:
            .int 34
            .quad node_9
  node_9:
            .int 714
            .quad 0
  Source: .quad node_6
  val: .int 203


